version: 0.2

env:
  variables:
    IMAGE_REPO: 418295691381.dkr.ecr.us-east-1.amazonaws.com/cinema
    CLUSTER_NAME: cluster1
    K8S_NAMESPACE: default
  exported-variables:
    - IMAGE_TAG

phases:
  install:
    runtime-versions:
      java: corretto11          # docker runtime removed
    commands:
      - echo "Set up classpath…"
      - export SERVLET_JAR=WebContent/WEB-INF/lib/tomcat-servlet-api-9.0.89.jar
      - export LIB_JARS="$SERVLET_JAR:WebContent/WEB-INF/lib/postgresql-42.2.2.jar"
  pre_build:
    commands:
      - echo "Login to ECR…"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $IMAGE_REPO
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Using tag $IMAGE_TAG"
  build:
    commands:
      - echo "Compile & package WAR…"
      - rm -rf build
      - mkdir -p build/ROOT/WEB-INF/{classes,lib}
      - find src -name '*.java' | xargs javac -cp "$LIB_JARS" -d build/ROOT/WEB-INF/classes
      - cp -r WebContent/* build/ROOT/
      - cp WebContent/WEB-INF/lib/*.jar build/ROOT/WEB-INF/lib/
      - (cd build/ROOT && jar cf ../../cinema.war .)
      - echo "Build Docker image…"
      - docker build -t $IMAGE_REPO:$IMAGE_TAG .
      - docker push $IMAGE_REPO:$IMAGE_TAG
  post_build:
    commands:
      - echo "Build completed – hand-off to deploy stage"

artifacts:
  files:
    - cinema.war

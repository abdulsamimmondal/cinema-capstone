version: 0.2

env:
  variables:
    AWS_REGION: us-east-1
    IMAGE_REPO: 418295691381.dkr.ecr.us-east-1.amazonaws.com/cinema
    CLUSTER_NAMESPACE: default      # not used yet but kept for later

phases:
  pre_build:
    commands:
      - echo "üîê  Logging in to Amazon ECR"
      - aws ecr get-login-password --region $AWS_REGION \
        | docker login --username AWS --password-stdin $IMAGE_REPO
      - IMAGE_TAG=$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c1-7)
      - echo "üè∑Ô∏è  Using image tag $IMAGE_TAG"

  build:
    commands:
      # ---------- compile & package WAR ----------
      - echo "üì¶  Packaging cinema.war"
      - export SERVLET_JAR=WebContent/WEB-INF/lib/tomcat-servlet-api-9.0.89.jar
      - export LIB_JARS="$SERVLET_JAR:WebContent/WEB-INF/lib/postgresql-42.2.2.jar"
      - rm -rf build && mkdir -p build/ROOT/WEB-INF/{classes,lib}
      - find src -name '*.java' | xargs javac -cp "$LIB_JARS" -d build/ROOT/WEB-INF/classes
      - cp -r WebContent/* build/ROOT/
      - cp WebContent/WEB-INF/lib/*.jar build/ROOT/WEB-INF/lib/
      - '( cd build/ROOT && "$JAVA_HOME/bin/jar" cf ../../cinema.war . )'

      # ---------- build & push image -------------
      - echo "üê≥  Building Docker image"
      - docker build --build-arg WAR_FILE=cinema.war -t "$IMAGE_REPO:$IMAGE_TAG" .
      - docker push "$IMAGE_REPO:$IMAGE_TAG"

      # ---------- update manifest ----------------
      - echo "üìù  Updating deployment manifest"
      - sed -i "s|PLACEHOLDER_TAG|$IMAGE_TAG|g" deployment/deployment.yaml

  post_build:
    commands:
      - echo "‚úÖ  Build complete ‚Äì artifacts ready for deploy"

artifacts:
  files:
    - appspec.yml
    - deployment/**/*
